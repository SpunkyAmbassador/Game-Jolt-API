{"author":"SpunkyAmbassador","category":3,"commands":[{"defaultParameters":[{"defaultValue":{"k":12,"max":1,"min":-1,"v":-1},"description":"Enter 1 to return only the achieved trophies for a user. Enter 0 to return only trophies the user hasn't achieved. Enter -1 to retrieve all trophies.","id":-1,"name":"getTrophies"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"If you would like to return just one trophy, you may pass the trophy ID with this parameter. If you do, only that trophy will be returned in the response. You may also pass multiple trophy IDs here if you want to return a subset of all the trophies. You do this as a comma-separated list, use string as default value and enter comma-separated list as value. Passing a trophy_id will ignore the getTrophies parameter if it is passed. Leave trophy_id as -1 to ignore this parameter.","id":-1,"name":"trophy_id"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"ID of variable to store data return by Game Jolt. The data will get store as a JSON object.","id":-1,"name":"returnDataStoreVariableID"},{"defaultValue":{"k":10,"v":false},"description":"If Switch:ON then logs return data in console. If Switch:OFF then does not logs data in console","id":-1,"name":"consoleLog"}],"description":"Returns one trophy or multiple trophies, depending on the parameters passed in.","id":1,"name":"Trophies - Fetch"},{"defaultParameters":[{"description":"The ID of the trophy to add for the user. [Required]","id":-1,"name":"trophy_id"}],"description":"Sets a trophy as achieved for a particular user.","id":2,"name":"Trophies - Add Achieved"},{"defaultParameters":[{"description":"The ID of the trophy to remove from the user. [Required]","id":-1,"name":"trophy_id"}],"description":"Remove a previously achieved trophy for a particular user.","id":3,"name":"Trophies - Remove Achieved"},{"defaultParameters":[{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"ID of variable to store data of return message. If the request was not successful, this contains the error message.","id":-1,"name":"messageVariableID"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"ID of variable to store data of return message. This variable will store the UNIX time stamp (in seconds) representing the server's time.","id":-1,"name":"timestampVariableID"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"ID of variable to store the timezone of the server.","id":-1,"name":"timezoneVariableID"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"Id of variable to store current year.","id":-1,"name":"yearVariableID"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"Id of variable to store current month.","id":-1,"name":"monthVariableID"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"Id of variable to store current day.","id":-1,"name":"dayVariableID"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"Id of variable to store current hour.","id":-1,"name":"hourVariableID"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"Id of variable to store current minute.","id":-1,"name":"minuteVariableID"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"Id of variable to store current second.","id":-1,"name":"secondVariableID"}],"description":"Returns the time of the Game Jolt server.","id":4,"name":"Time - Time Fetch"},{"defaultParameters":[{"defaultValue":{"k":8,"v":""},"description":"This is a string value associated with the score.","id":-1,"name":"score"},{"description":"This is a numerical sorting value associated with the score. All sorting will be based on this number.","id":-1,"name":"sort"},{"defaultValue":{"k":8,"v":""},"description":"If there's any extra data you would like to store as a string, you can use this variable.","id":-1,"name":"extra_data"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"The ID of the score table to submit to. If table_id is left -1, the score will be submitted to the primary high score table.","id":-1,"name":"table_id"}],"description":"Adds a score for a user. (Guest accounts are not supported yet)","id":5,"name":"Scores - Add"},{"defaultParameters":[{"defaultValue":{"k":12,"max":100,"min":5,"v":10},"description":"The number of scores you'd like to return.","id":-1,"name":"limit"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"The ID of the score table. If value is left at -1, the scores from the primary score table will be returned.","id":-1,"name":"table_id"},{"defaultValue":{"k":10,"v":true},"description":"If Switch:ON then retrieve all scores.. If Switch:OFF then retrieve scores for just playing user.","id":-1,"name":"getGlobalScores"},{"defaultValue":{"k":12,"v":-1},"description":"Fetch only scores better than this score sort value. Use -1 to ignore this parameter.","id":-1,"name":"better_than"},{"defaultValue":{"k":12,"v":-1},"description":"Fetch only scores worse than this score sort value. Use -1 to ignore this parameter.","id":-1,"name":"worse_than"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"ID of variable to store return data from server. The return data will be a JSON array stored as string in the variable.","id":-1,"name":"returnDataStoreVariableID"},{"defaultValue":{"k":10,"v":false},"description":"If Switch:ON then logs return data in console. If Switch:OFF then does not logs data in console","id":-1,"name":"consoleLog"}],"description":"Returns a list of scores either for a user or globally for a game.","id":6,"name":"Scores - Fetch"},{"defaultParameters":[{"description":"This is a numerical sorting value that is represented by a rank on the score table.","id":-1,"name":"sort"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"The ID of the score table from which you want to get the rank. Remark - If value is left -1, the ranks from the primary high score table will be returned.","id":-1,"name":"table_id"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"ID of variable to store the rank of the score on the score table.","id":-1,"name":"rankVariableID"}],"description":"Returns the rank of a particular score on a score table. Remark - If the score is not represented by any rank on the score table, the request will return the rank that is closest to the requested score.","id":7,"name":"Scores - Get Rank"},{"defaultParameters":[{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"ID of variable to store return data from server. The return data will be a JSON array stored as string in the variable.","id":-1,"name":"returnDataStoreVariableID"},{"defaultValue":{"k":10,"v":false},"description":"If Switch:ON then logs return data in console. If Switch:OFF then does not logs data in console","id":-1,"name":"consoleLog"}],"description":"Returns a list of high score tables for a game.","id":8,"name":"Scores - Tables"},{"description":"Opens a game session for a particular user and allows you to tell Game Jolt that a user is playing your game. You must ping the session to keep it active and you must close it when you're done with it.","id":9,"name":"Sessions - Open"},{"description":"Closes the active session.","id":10,"name":"Sessions - Close"},{"defaultParameters":[{"defaultValue":{"k":8,"v":""},"description":"Sets the status of the session. Valid Values for status - active and idle [case sensitive]","id":-1,"name":"status"}],"description":"Pings an open session to tell the system that it's still active. If the session hasn't been pinged within 120 seconds, the system will close the session and you will have to open another one. It's recommended that you ping about every 30 seconds or so to keep the system from clearing out your session.\n\nYou can also let the system know whether the player is in an active or idle state within your game.","id":11,"name":"Sessions - Ping"},{"description":"Checks to see if there is an open session for the user. Can be used to see if a particular user account is active in the game. REMARKS - This endpoint returns false for the success field when no open session exists.\nThat behaviour is different from other endpoints which use this field to indicate an error state.","id":12,"name":"Sessions - Check"},{"defaultParameters":[{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"ID of variable to store the list of friends.","id":-1,"name":"friendsVariableID"}],"description":"A namespace to get information about users friends on Game Jolt. Returns the list of a user's friends.","id":13,"name":"Friends - Friends"},{"defaultParameters":[{"defaultValue":{"k":8,"v":""},"description":"The key of the data item you'd like to fetch.","id":-1,"name":"key"},{"defaultValue":{"k":10,"v":true},"description":"If you pass in the user information, the data item will be fetched for a user. If you leave the user information empty, it will be fetched globally for the game.","id":-1,"name":"passUserInformation"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"ID of variable to store data. If the request was successful, this contains the item's data.","id":-1,"name":"dataVariable"}],"description":"Returns data from the data store.","id":14,"name":"Data Store - Fetch"},{"defaultParameters":[{"defaultValue":{"k":8,"v":""},"description":"The pattern to apply to the key names in the data store.","id":-1,"name":"pattern"},{"defaultValue":{"k":10,"v":true},"description":"If you pass in the user information (ON), this function will return all the keys in a user's data store. If you leave the user information OFF, it will return all the keys in the game's global data store.","id":-1,"name":"passUserInformation"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"ID of variable to store all the keys for the particular data store.","id":-1,"name":"keyVariable"}],"description":"Returns either all the keys in the game's global data store, or all the keys in a user's data store.","id":15,"name":"Data Store - Get Keys"},{"defaultParameters":[{"defaultValue":{"k":8,"v":""},"description":"The key of the data item you'd like to remove.","id":-1,"name":"key"},{"defaultValue":{"k":10,"v":true},"description":"If you pass in the user information (ON), the item will be removed from a user's data store. If you leave the user information OFF, it will be removed from the game's global data store.","id":-1,"name":"passUserInformation"}],"description":"Removes data from the data store.","id":16,"name":"Data Store - Remove"},{"defaultParameters":[{"defaultValue":{"k":8,"v":""},"description":"The key of the data item you'd like to set. You can create new data store items by passing in a key that doesn't yet exist in the data store.","id":-1,"name":"key"},{"defaultValue":{"k":8,"v":""},"description":"The data you'd like to set.","id":-1,"name":"data"},{"defaultValue":{"k":10,"v":true},"description":"If you pass in the user information (ON), this item will be set inuser's data store. If you leave the user information OFF, it will be set in the game's global data store.","id":-1,"name":"passUserInformation"}],"description":"Sets data in the data store.","id":17,"name":"Data Store - Set"},{"defaultParameters":[{"defaultValue":{"k":8,"v":""},"description":"The key of the data item you'd like to update.","id":-1,"name":"key"},{"defaultValue":{"k":8,"v":""},"description":"The operation you'd like to perform.","id":-1,"name":"operation"},{"defaultValue":{"k":8,"v":""},"description":"The value you'd like to apply to the data store item. You can chage default value to text or number based on your needs.","id":-1,"name":"value"},{"defaultValue":{"k":10,"v":true},"description":"If you pass in the user information (ON), this function will return all the keys in a user's data store. If you leave the user information OFF, it will return all the keys in the game's global data store.","id":-1,"name":"passUserInformation"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"ID of variable to store the new value of the data item.","id":-1,"name":"dataVariable"}],"description":"Updates data in the data store.","id":18,"name":"Data Store - Update"}],"defaultParameters":[{"description":"ID of your Game Jolt game","id":-1,"name":"Game ID"},{"defaultValue":{"k":8,"v":""},"description":"API Key of your game. You can find it under your game dashboard > Game API > API Setings > Private Key","id":-1,"name":"API Key"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"ID of variable to store success(response) of request. Use -1 to not store any response data.","id":-1,"name":"Success Variable ID"}],"description":"This is Game Jolt API Plugin for RPG Paper Maker. Using this plugin you can interact with Game Jolt API.\n\nUsing this plugin, you can:\n- give achivements to your players.\n- get current time by sending request to Game Jolt Servers.\n- add and get scores of players.\n\nCurrently, this plugin supports:\n- Trophies\n- Time\n- Scores\n\nThis API is currently in development and new features are getting added regularly.\n\nNOTE:\n- There are many values you can store in variables. To store values in variables, enter the respected variable ID for the values. If you wish to not store values in variables, enter -1 in value field and the data will not get stored.\n- Some parameters have additional information about -1 default value, make sure to properly read description of each parameters.","name":"Game Jolt API","parameters":[{"defaultValue":{"k":12,"v":914097},"description":"ID of your Game Jolt game","id":-1,"name":"Game ID"},{"defaultValue":{"k":8,"v":"e4fb869e79bec298d90b4a76d004f3ea"},"description":"API Key of your game. You can find it under your game dashboard > Game API > API Setings > Private Key","id":-1,"name":"API Key"},{"defaultValue":{"k":12,"min":-1,"v":-1},"description":"ID of variable to store success(response) of request. Use -1 to not store any response data.","id":-1,"name":"Success Variable ID"}],"tutorial":"https://gamejolt.com/game-api/doc","version":"1.2.0","website":"https://github.com/SpunkyAmbassador/Game-Jolt-API"}